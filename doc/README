REGION EXTENSION
================

Region extension
===============================================================================
Author: Bj?rn Dieding, http://www.xrow.com

The region extension redirects a user to a siteaccess based on his ip address.
This can be done in the background (the ip address is checked in the database)
automatically, or the user can choose a country siteaccess in a specific
pagelayout.

This extension includes GeoLite data created by MaxMind, available from
http://maxmind.com/

The geo ip database is taken from
http://geolite.maxmind.com/download/geoip/database/GeoIPCountryCSV.zip

Project Homepage:
http://projects.ez.no/region


When geo-detection is triggered
====================================
Geo-detection is triggered when a user requests the home page or a non-region-specific URL (e.g /verve).
The web server redirects the browser to /region/index/ which then takes the requested URL and interprets it.
TODO: include as autoload so Apache redirects not required.


How the geo-detection works
===========================

In order to serve up a siteaccess, the region extension must formulate a region via a country code and a language.

1. Country code
	- GET variable 'TESTIP' (IP address) or 'country' (2-char country code)
	- it will first try to find a preferred region by looking up the user's IP address in a MaxMind Geo-lite database
   (sucked into MySQL DB tables)
   
2. Language
   - GET variable 'lang' (containing 3-char language code)
   - Browser languages

   
It formulates the region in the following order:

1. Exact match of region (language + country code) in list of available regions ("LanguageSA" under "RegionalSettings" in site.ini)
2. First item in above list with a country match
3. First item in above list with a language match
4. First item in above list

Setup
===============================================================================
- install extension
- run php bin/php/ezpgenerateautoloads.php
- activate the extension in your site.ini.append
- edit settings/region.ini
- clear ini cache

From eZ Publish 4.1.x:
Edit your config.php and add those lines of code. This will execute
and request router after the ezc have been loaded.

The first parameter of ezxRegion::load will define an array of siteaccesses
that are excluded from the routing.

<?php
if( php_sapi_name() != 'cli' )
{
    function RegionOnLoad( $className )
    {
        if ( isset($GLOBALS['eZDBGlobalInstance']) && $GLOBALS['eZDBGlobalInstance'] instanceof eZDBInterface )
        {
            spl_autoload_unregister( 'RegionOnLoad' );
            ezxRegion::load( 'eZSESSID', true );
            return ezpAutoloader::autoload( $className );
        }
    }
    spl_autoload_register( 'RegionOnLoad' );
}
?>
